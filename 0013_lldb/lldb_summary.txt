LLDB Debugger (LLDB) — высокопроизводительный отладчик. Более современный
аналог gdb.

###########################
#  Основные команды lldb  #
###########################

- Запуск программы в отладчике:
lldb ./app

- Запуск TUI:
gui

- Вызов панели с просмотром клавиш управления:
[h]

- Листание кода:
Стрелки вверх и вниз

- Управление исполнением программы:
  * Запуск программы:
    run
  * Выполнение программы до строки, где сейчас стоит курсор:
    [Enter]
  * Выполнить следующую строку:
    [n]
  * Выполнять программу до следующей точки останова:
    [c]

- Установить точку останова на текущей выделенной строке кода:
[b]

- Переключение между панелями в TUI режиме:
[Tab]

- Работа с точками останова:
  * Установить точку останова по имени функции:
    breakpoint set --name function_name
  * Установить точку останова на строке в файле:
    breakpoint set --file file.c --line 42
  * Просмотреть все точки останова:
    breakpoint list
  * Удалить точку останова:
    breakpoint delete 1 (где 1 - номер точки)

- Просмотр и изменение переменных:
  * Вывести значение переменной:
    print variable_name
  * Вывести значение выражения:
    expression variable_name + 1
  * Изменить значение переменной:
    expression variable_name = 42
  * Отслеживание изменения переменной:
    watchpoint set variable variable_name

- Работа со стеком вызовов:
  * Показать стек вызовов:
    backtrace
  * Перейти на конкретный фрейм:
    frame select 2
  * Показать аргументы и локальные переменные текущего фрейма:
    frame variable

- Пошаговое выполнение:
  * Шаг с заходом в функцию:
    step
  * Шаг с обходом функции:
    next
  * Выйти из текущей функции:
    finish

- Просмотр памяти:
  * Дамп памяти в hex:
    memory read --size 4 --format x адрес
  * Дамп памяти как массив:
    memory read --size 1 --count 16 --format c адрес

- Полезные команды:
  * Справка по команде:
    help command_name
  * Запуск с аргументами:
    run arg1 arg2
  * Загрузка core dump:
    lldb -c core.file ./app
  * Выход из отладчика:
    quit
