# --- Основные команды gdb ---



g++ -g -o example example.cpp       # Обязательно использовать опцию -g для
    --                              # записи отладочной информации в исп. файл

-g          # Опция g++ для записи отладочной информации в исполняемый файл
-ggdb       # Опция g++ для записи отладочной информации в формате для gdb
-g3         # Опция g++ для записи максимально детализированной отлад. информ.

gdb -tui ./app          # Пример запуска отладчика gdb с текстовым интерфейсом

l src/main.cpp:17       # Вывод кода около 17-й строки файла src/main.cpp

b 17                    # Поставить точку останова на 17 строке текущего файла
b get_age               # Поставить точку останова на начало функции get_age
b namespace::class::func

i breakpoints           # Вывести информации о всех точках останова
i threads               # Вывести информации о всех потоках приложения
i registers             # Вывести состояние всех регистров

r                       # Команда запуска программы в отладчике
r arg1 arg2             # Команда запуска программы c аргументами в отладчике
c                       # Продолжить выполнение команды до след. точки останова
n                       # Выполнить следующую строку кода (шаг через)
s                       # Выполнить след. строку с заходом в функ. (шаг в)

d                       # Удалить все точки останова
d 1                     # Удалить точку останова с индексом 1
d 1-5                   # Удалить точки останова с индексами 1, 2, 3, 4, 5

!clear                  # Очистить экран
backtrace    (bt)       # Бектрейс стека вызовов в случае ошибки

disass main             # Дизассемблирование функции main
disass $pc-32, $pc+32   # Дизассемблирование 32 микрокоманд до и после текущей
                        # команды (на которую указывает регистр команд)
